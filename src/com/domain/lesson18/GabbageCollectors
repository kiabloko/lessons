heap хранит пользовательские объекты
она одна
все объекты обращаются к ней
В объекте хранится:
Загловок - здесь хэшкод, вся информация для сборки мусора, если то массив тоже тут
Память для примитивных свойств
Память для ссылочных

в VM Options  - выдлеение памяти для кучи

System.gc()
Узнать сколько памяти:
long totalMemory =Runtime.getRuntime().totalMemory();
long freeMemory = Runtime.getRuntime().freeMemory();

Сборщики мусора:

Serial GC -  последовательный сборщик мусора
выполнение программы прекращается - Stop-The-World
Eden - молодое поколение
Survivor - выжившие после сборки мусора
Tenured - старшее поколение, здесь только те, кто длительно выживал
Eden - Survivor1 -Survivor2 | Tenured
первый прогон  - S1
второй прогон S1 -S2
третий прогон S2- S1
Кто длительно в S  ---> T


Parallel GC -  параллельный сборщик мусора
выполнение программы прекращается - Stop-The-World
сборка в несколько потоков
используется там,где несколько процессов
Для машин с N процессоров создает N потоков для N<8
целую часть от 5N/8 для  N >= 8
Tenured |Eden -Survivor1 -Survivor2
если не хватает в области места - по умолчанию увеличивает на 20%
если излишек - по умолчанию уменьшает на 5%
Можно регулировать

G1 (Garbage First) GC по умолчанию всключается в версии 9 (в 8 parallel)
память главное и многопроцессорные системы
можно принудительно включить начиная с 7 версии
Eden || Survivor | Tenured
все делит на фрагменты. какие то в младшему, какие то к старшему поколению. какие то к выжившему
новые объекты в эен - потом так же в севайвер  которые уцелели и выживших в Т
в оставшиеся места перемещает объекты
перемещает объекты по фрагментам
некоторые операции без остановки программы
анализирует предыдущие сборки мусора
работает постепенно по поколениям. елси нет памяти до Т не доходит

Параллельный G1 GC  с 10 версии